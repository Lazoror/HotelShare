@model HotelShare.Domain.Models.SqlModels.FilterModels.HotelFilters
@using HotelShare.Domain.Enums
@using Newtonsoft.Json


@{
    int releaseDate = (int)Model.Filters.ReleaseDate;
    int sortType = (int)Model.Filters.SortType;

    var itemsPerPage = new List<string>
{
        "10",
        "20",
        "50",
        "100",
        "all"
    };

    var action = ViewContext.RouteData.Values["Action"].ToString();
}

<script>
    var serializedFilters = '@(JsonConvert.SerializeObject(Model.Filters))';
</script>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - HotelShare</title>

    <environment include="Development">
        <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.css" />
        <link rel="stylesheet" href="~/css/site.css" />
        <link href="https://fonts.googleapis.com/css?family=Montserrat:400,500,700&display=swap" rel="stylesheet">
        <link href="https://fonts.googleapis.com/css?family=Open+Sans&display=swap" rel="stylesheet">
    </environment>
    <environment exclude="Development">
        <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css"
              asp-fallback-href="~/lib/bootstrap/dist/css/bootstrap.min.css"
              asp-fallback-test-class="sr-only" asp-fallback-test-property="position" asp-fallback-test-value="absolute" />
        <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
        <link href="https://fonts.googleapis.com/css?family=Montserrat:400,500,700&display=swap" rel="stylesheet">
        <link href="https://fonts.googleapis.com/css?family=Open+Sans&display=swap" rel="stylesheet">
    </environment>
</head>
<body>

    <partial name="_Navbar" />

    <partial name="_CookieConsentPartial" />

    @if (!action.Contains("Edit") || !action.Contains("Create"))
    {
        <div class="container">

            <div class="select-language">
                <div class="row">
                    <div class="col-md-12">
                        <partial name="_SelectLanguagePartial" />
                    </div>
                </div>
            </div>
        </div>

    }

    <div class="container body-content">
        <div class="row">
            <div class="col-md-8 manage-wrapper">
                @if (User.IsInRole("Administrator"))
                {
                    <div>
                        @Html.ActionLink(Resources.ManageUsers, "ManageUsers", "Administration", new { }, new { @class = "btn btn-dark" })
                        @Html.ActionLink(Resources.ManageRoles, "ManageRoles", "Administration", new { }, new { @class = "btn btn-dark" })
                    </div>
                }
                <div class="search-form">
                    <form asp-controller="Hotel" asp-action="Index" method="get">
                        <input type="text" name="@nameof(Model.Filters.SearchString)" placeholder="@Resources.SearchGame" pattern=".{3,}" required title="3 characters minimum" class="form-control hotel-search" />
                    </form>
                </div>

                @RenderBody()

            </div>
            <div class="col-md-4 sidebar-wrapper">
                <form asp-action="Index" asp-controller="Hotel" method="get" id="filterForm">
                    <div class="sidebar-title">
                        <p>@Resources.RefineResults</p>
                    </div>
                    <div class="sidebar">
                        <div class="sidebar-sorting">
                            <p class="sort-title">@Resources.Sorting</p>
                            <hr />
                            <select name="@nameof(Model.Filters.SortType)" asp-items="Html.GetEnumSelectList<SortType>()" id="sort-type" class="form-control"></select>
                        </div>

                        <div class="sidebar-price-range">
                            <p class="sort-title">@Resources.PriceRange</p>
                            <hr />

                            <div class="price-range-left">
                                <p>@Resources.From</p>
                                <input type="number" name="@nameof(Model.Filters.PriceFrom)" value="@Model.Filters.PriceFrom" min="0" step="0.01" id="priceFrom" class="form-control" />
                            </div>
                            <div class="price-range-right">
                                <p>@Resources.To</p>
                                <input type="number" name="@nameof(Model.Filters.PriceTo)" value="@Model.Filters.PriceTo" step="0.01" id="priceTo" class="form-control" />
                            </div>
                        </div>

                        <div class="sidebar-room">
                            <p class="sort-title">@Resources.Rooms</p>
                            <hr />

                            <div class="room-list">
                                @foreach (string room in Model.DefaultValues.Rooms)
                                {
                                    <div class="room">
                                        @if (Model.Filters.Rooms != null && Model.Filters.Rooms.Contains(room))
                                        {
                                            <input type="checkbox" name="@nameof(Model.Filters.Rooms)" value="@room" checked />
                                        }
                                        else
                                        {
                                            <input type="checkbox" name="@nameof(Model.Filters.Rooms)" value="@room" />
                                        }

                                        <label>@room</label>
                                    </div>
                                }
                            </div>
                        </div>

                        <div class="sidebar-release-date">
                            <p class="sort-title">@Resources.ReleaseDate</p>
                            <hr />

                            <select name="@nameof(Model.Filters.ReleaseDate)" asp-items="Html.GetEnumSelectList<ReleaseDate>()" id="release-date" class="form-control"></select>
                        </div>

                        @if (!String.IsNullOrEmpty(Model.Filters.SearchString))
                        {
                            <input type="hidden" name="@nameof(Model.Filters.SearchString)" value="@Model.Filters.SearchString" />
                        }

                        <input type="hidden" name="@nameof(Model.Filters.CurrentPage)" value="" id="currentPage" />
                        <input type="hidden" name="@nameof(Model.Filters.ItemsPerPage)" value="@Model.Filters.ItemsPerPage" id="items-per-page" />

                        <input type="button" name="sumbit" value="@Resources.Filter" class="btn" id="filter-btn" />
                    </div>
                    <div class="pagging">
                        @for (int i = 1; i <= Model.Filters.TotalPages; i++)
                        {
                            if (i != Model.Filters.CurrentPage)
                            {
                                <input type="button" value="@i" name="@nameof(Model.Filters.CurrentPage)" class="pagging-btn" />
                            }
                            else
                            {
                                <input type="button" value="@i" name="@nameof(Model.Filters.CurrentPage)" class="active pagging-btn" />
                            }
                        }
                    </div>
                </form>
            </div>
        </div>

        <div class="col-md-8 paggination-wrapper">
            <div class="pagination-items">
                <span>@Resources.ItemsPerPage</span>
                <form asp-controller="Hotel" asp-action="Index" method="get" id="pagination-items">
                    <select name="@nameof(Model.Filters.ItemsPerPage)" class="form-control d-inline-block w-auto">

                        @foreach (string item in itemsPerPage)
                        {
                            if (item == Model.Filters.ItemsPerPage.ToString())
                            {
                                if (item == "all")
                                {
                                    <option value="@int.MaxValue" selected>@item</option>
                                }
                                else
                                {
                                    <option value="@item" selected>@item</option>
                                }

                            }
                            else
                            {
                                if (item == "all")
                                {
                                    <option value="@int.MaxValue">@item</option>
                                }
                                else
                                {
                                    <option value="@item">@item</option>
                                }
                            }
                        }
                    </select>
                </form>
            </div>
        </div>


    </div>

<partial name="_Footer" />

    <script src="~/js/Pagination.js"></script>

    <script>
    document.getElementById('release-date').value = @releaseDate;
    document.getElementById('sort-type').value = @sortType;

    var filterBtn = document.getElementById('filter-btn');
    var isChanged = false;

    filterBtn.addEventListener("click", function () {

        var serializedFiltersModified = serializedFilters.split('&quot;').join('"');
        var oldFilters = JSON.parse(serializedFiltersModified);

        var filters = '@(JsonConvert.SerializeObject(@Model.Filters))';
        var filtersModified = filters.split('&quot;').join('"');
        var currentFilters = JSON.parse(filtersModified);

        var genres = document.querySelectorAll(".sidebar-genres input");
        var genresArr = [];
        for (var i = 0; i < genres.length; i++) {
            if (genres[i].checked) {
                genresArr.push(genres[i].value);
            }
        }

        if (genresArr.length == 0) {
            genresArr = null;
        }

        currentFilters.Genres = genresArr;

        var platforms = document.querySelectorAll(".sidebar-platforms input");
        var platformsArr = [];
        for (var o = 0; o < platforms.length; o++) {
            if (platforms[o].checked) {
                platformsArr.push(platforms[o].value);
            }
        }

        if (platformsArr.length == 0) {
            platformsArr = null;
        }

        currentFilters.Platforms = platformsArr;

        var rooms = document.querySelectorAll(".sidebar-room input");
        var roomsArr = [];
        for (var p = 0; p < rooms.length; p++) {
            if (rooms[p].checked) {
                roomsArr.push(rooms[p].value);
            }
        }

        if (roomsArr.length == 0) {
            roomsArr = null;
        }

        currentFilters.Rooms = roomsArr;
        currentFilters.ReleaseDate = Number(document.querySelector("#release-date").value);
        currentFilters.SortType = Number(document.querySelector("#sort-type").value);
        currentFilters.PriceFrom = Number(document.querySelector("#priceFrom").value);
        currentFilters.PriceTo = Number(document.querySelector("#priceTo").value);

        if (oldFilters.SortType != currentFilters.SortType) {
            isChanged = true;
        }
        if (oldFilters.PriceFrom != currentFilters.PriceFrom) {
            isChanged = true;
        }
        if (oldFilters.PriceTo != currentFilters.PriceTo) {
            isChanged = true;
        }
        if (oldFilters.Rooms != currentFilters.Rooms) {
            isChanged = true;
        }
        if (oldFilters.ReleaseDate != currentFilters.ReleaseDate) {
            isChanged = true;
        }
        if (oldFilters.Genres != currentFilters.Genres) {
            isChanged = true;
        }
        if (oldFilters.Platforms != currentFilters.Platforms) {
            isChanged = true;
        }

        if (isChanged) {
            document.getElementById("currentPage").setAttribute("value", 1);
            filterBtn.setAttribute("type", "submit");
            filterBtn.submit();
        }
    });
    isChanged = false;
    filterBtn.setAttribute("type", "button");
    </script>

    <environment include="Development">
        <script src="~/js/site.js" asp-append-version="true"></script>
    </environment>
    <environment exclude="Development">
        <script src="~/js/site.min.js" asp-append-version="true"></script>
    </environment>

    @RenderSection("Scripts", required: false)
</body>
</html>
